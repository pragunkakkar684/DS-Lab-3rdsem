$date
	Thu Aug 28 15:49:37 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module mux16to1_tb $end
$var wire 1 ! y $end
$var reg 16 " d [15:0] $end
$var reg 4 # sel [3:0] $end
$scope module uut $end
$var wire 16 $ d [15:0] $end
$var wire 4 % sel [3:0] $end
$var wire 1 & y3 $end
$var wire 1 ' y2 $end
$var wire 1 ( y1 $end
$var wire 1 ) y0 $end
$var wire 1 ! y $end
$scope module mux0 $end
$var wire 1 * d0 $end
$var wire 1 + d1 $end
$var wire 1 , d2 $end
$var wire 1 - d3 $end
$var wire 2 . sel [1:0] $end
$var wire 1 ) y $end
$upscope $end
$scope module mux1 $end
$var wire 1 / d0 $end
$var wire 1 0 d1 $end
$var wire 1 1 d2 $end
$var wire 1 2 d3 $end
$var wire 2 3 sel [1:0] $end
$var wire 1 ( y $end
$upscope $end
$scope module mux2 $end
$var wire 1 4 d0 $end
$var wire 1 5 d1 $end
$var wire 1 6 d2 $end
$var wire 1 7 d3 $end
$var wire 2 8 sel [1:0] $end
$var wire 1 ' y $end
$upscope $end
$scope module mux3 $end
$var wire 1 9 d0 $end
$var wire 1 : d1 $end
$var wire 1 ; d2 $end
$var wire 1 < d3 $end
$var wire 2 = sel [1:0] $end
$var wire 1 & y $end
$upscope $end
$scope module mux_final $end
$var wire 1 ) d0 $end
$var wire 1 ( d1 $end
$var wire 1 ' d2 $end
$var wire 1 & d3 $end
$var wire 2 > sel [1:0] $end
$var wire 1 ! y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 >
b0 =
0<
0;
0:
09
b0 8
07
06
05
04
b0 3
02
01
00
0/
b0 .
0-
0,
0+
1*
1)
0(
0'
0&
b0 %
b1 $
b0 #
b1 "
1!
$end
#10000
0)
1(
1!
0*
10
b1 .
b1 3
b1 8
b1 =
b1 >
b100000 "
b100000 $
b101 #
b101 %
#20000
1!
0(
1'
00
14
b0 .
b0 3
b0 8
b0 =
b10 >
b100000000 "
b100000000 $
b1000 #
b1000 %
#30000
1!
0'
1&
04
19
b11 >
b1000000000000 "
b1000000000000 $
b1100 #
b1100 %
#40000
1!
1)
1(
1'
1&
1*
1+
1,
1-
1/
10
11
12
14
15
16
17
1:
1;
1<
b11 .
b11 3
b11 8
b11 =
b1111111111111111 "
b1111111111111111 $
b1111 #
b1111 %
#50000
0)
0+
0-
0/
00
01
04
05
09
0;
b1 >
b1010110010000101 "
b1010110010000101 $
b111 #
b111 %
#60000
